
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import { toast } from 'sonner';
import type { Database } from './types';

const SUPABASE_URL = "https://dcrqkvrmamefgkxvkxoi.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImRjcnFrdnJtYW1lZmdreHZreG9pIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDEyMjc3MDgsImV4cCI6MjA1NjgwMzcwOH0.Tc9e1ouEzvKU6KOXiqiN0qoro7Z7sC7NQg-ehieosVY";

// Robust client with retry mechanism
export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    persistSession: true,
    autoRefreshToken: true,
    storage: typeof window !== 'undefined' ? localStorage : null,
  },
  global: {
    headers: {
      'x-client-info': 'lovable-recreation-centers-app'
    },
  },
  db: {
    schema: 'public',
  },
  // Add retries to make the connection more resilient
  realtime: {
    params: {
      eventsPerSecond: 10
    }
  }
});

// Enhanced connection test function with detailed error handling
export const testSupabaseConnection = async () => {
  try {
    console.log("Testing Supabase connection to URL:", SUPABASE_URL);
    
    // Attempt a simple query to test connection
    const { data, error, status } = await supabase
      .from('rec_centers')
      .select('id', { count: 'exact', head: true })
      .limit(1);
    
    if (error) {
      console.error('Supabase connection test failed:', error);
      return { 
        success: false, 
        error, 
        status,
        message: `Failed to connect to Supabase: ${error.message || 'Unknown error'}`
      };
    }
    
    console.log('Supabase connection test successful. Status:', status, 'Data:', data);
    return { 
      success: true, 
      data, 
      status,
      message: 'Successfully connected to Supabase'
    };
  } catch (err) {
    const errorMessage = err instanceof Error ? err.message : 'Unknown error';
    console.error('Unexpected error testing Supabase connection:', err);
    
    // Show a toast with the error message
    toast.error(`Database connection failed: ${errorMessage}`);
    
    return { 
      success: false, 
      error: err, 
      message: `Unexpected error connecting to Supabase: ${errorMessage}`
    };
  }
};

// Function to debug the current Supabase configuration
export const getSupabaseDebugInfo = () => {
  return {
    url: SUPABASE_URL,
    keyLength: SUPABASE_PUBLISHABLE_KEY.length,
    keyPreview: `${SUPABASE_PUBLISHABLE_KEY.substring(0, 10)}...${SUPABASE_PUBLISHABLE_KEY.substring(SUPABASE_PUBLISHABLE_KEY.length - 10)}`,
    browserSupport: typeof window !== 'undefined',
    localStorageAvailable: typeof localStorage !== 'undefined'
  };
};
